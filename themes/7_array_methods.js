// Todo. МАССИВЫ И МЕТОДЫ МАССИВОВ

let numArr = [3, 73, 1573, 79, 55];

let value;

value = numArr.length; // 5, получаем длину массива
// numArr.length = 0; // получим пустой массив
// numArr.length = 100; // получим массив с пустыми элементами

// ? Функция «Array.isArray()». Способ проверить является ли массив массивом
value = Array.isArray(numArr); // true

value = numArr[1]; // 73, получаем элемент по его индексу

// ? Можем изменить какой-либо элемент в массиве
numArr[1] = 77; // 77


// Todo. МЕТОД «indexOf» возвращает индекс искомого элемента
value = numArr.indexOf(1573); // 2


// Todo. МЕТОДЫ ДЛЯ ДОБАВЛЕНИЯ И УДАЛЕНИЯ ЭЛЕМЕНТОВ ИЗ МАССИВА
// ? Push - добавляет элемент в конец массива. Возвращает длину массива
value = numArr.push(91); // 6

// ? Pop - удаляет последний элемент из массива. Возвращает значение удалённого элемента
value = numArr.pop(); // 91

// ? Unhift - добавляет элемент в начало массива. Возвращает длину массива
value = numArr.unshift(27);

// ? Shift - удаляет первый элемент массива. Возвращает значение удалённого элемента
value = numArr.shift();


// Todo. МЕТОД «Slice» НЕ ИЗМЕНЯЕТ ИСХОДНЫЙ МАССИВ. Вырезает нужные элементы из массива и возвращает их
// ? Первый аргумент - позиция с которой хотим вырезать, второй - до какой НЕ включительно
value = numArr.slice(0, 2); // 3, 77


// Todo. МЕТОД «Splice» МЕНЯЕТ ИСХОДНЫЙ МАССИВ. Вырезает нужные элементы и возвращает их.
// ? Первый аргумент - позиция с которой мы хотим вырезать, второй - сколько элементов хотим получить начиная с первого аргумента
value = numArr.splice(2, 2); // 1573, 79

// ? Вместо удаляемых элементов мы можем добавить новые
value = numArr.splice(2, 2, 'one', 'two'); // [3, 77, 'one', 'two', 'three']

// ? Если мы ничего не хотим удалять, а просто нужно добавить новые элементы в массив с нужного индекса, то второй аргумент ставим значение - 0, а далее пишем новые элементы
value = numArr.splice( 2, 0, 1573, 79);


// Todo. МЕТОД «Reverse» МЕНЯЕТ ИСХОДНЫЙ МАССИВ. Переворачивает его. Возвращает изменённый массив
value = numArr.reverse(); // ['three', 'two', 'one', 79, 1573, 77, 3] 


// Todo. МЕТОД «Concat». Конкатенирует(объединяет массивы)
// ? Можно передать в качестве аргумента не только массив, но и любые другие значания и они будут добавлены в массив. Возвращает новый массив
const arr2 = ['Denis', 'Evgenia'];
value = numArr.concat(arr2, 'Jam'); // ['two', 'one', 79, 1573, 77, 3, 'Denis', 'Evgenia', 'Jam'] 


// Todo. МЕТОД «Join». Преобразует массив в строку. В качестве аргумента указывается разделитель. Возвращает строку
// ? Если не передать разделитель в виде аргумента, то разделитель по-умолчанию запятая
value = numArr.join(); // two,one,79,1573,77,3
value = numArr.join(' '); // two one 79 1573 77 3
value = numArr.join(''); // twoone791573773


// Todo. МЕТОД «Split». Преобразует строку в массив
// ? Если ничего не передавать возвращает всю строку в виде массива c одним элементом
value = 'Hello World'.split(); // ['Hello World']
value = 'Hello World'.split(''); // ['H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd']
value = 'Hello World'.split(' '); // ['Hello', 'World']

console.log(value, numArr);